@startuml robustness-regist-user

actor 利用者
boundary 利用者登録画面 #green
boundary 利用者仮登録完了画面 #green
boundary 利用者認証完了画面 #green
control 利用者登録画面を表示する
control アカウント情報を入力する
control アカウント名の文字数をチェックする
control メールアドレスの重複をチェックする
control パスワードの形式をチェックする
control エラーメッセージを表示する
control 利用者を未認証状態で追加する
control アクティベートキーを追加する
control 利用者に認証メールを送信する
control 利用者仮登録完了画面を表示する
control アクティベートキーの一致をチェックする
control 利用者を認証状態にする
control 利用者が既に認証されている旨のメッセージを表示する
control 利用者認証完了画面を表示する
entity 利用者アカウント #blue

top to bottom direction

利用者 --> 利用者登録画面
利用者登録画面を表示する --> 利用者登録画面
利用者登録画面 --> アカウント情報を入力する
アカウント情報を入力する --> アカウント名の文字数をチェックする :送信ボタンを押す
アカウント名の文字数をチェックする --> エラーメッセージを表示する :アカウント名の文字数が180文字以上だった場合
エラーメッセージを表示する --> 利用者登録画面
アカウント名の文字数をチェックする --> パスワードの形式をチェックする
パスワードの形式をチェックする --> メールアドレスの重複をチェックする
パスワードの形式をチェックする --> エラーメッセージを表示する :パスワードの形式が不正だった場合
メールアドレスの重複をチェックする --> エラーメッセージを表示する :メールアドレスが重複していた場合
メールアドレスの重複をチェックする --> 利用者を未認証状態で追加する
利用者を未認証状態で追加する --> アクティベートキーを追加する
アクティベートキーを追加する --> 利用者に認証メールを送信する
利用者に認証メールを送信する --> 利用者仮登録完了画面を表示する
利用者仮登録完了画面を表示する --> 利用者仮登録完了画面
利用者仮登録完了画面 .. アクティベートキーの一致をチェックする :認証メールに記載されたURLにアクセスする
アクティベートキーの一致をチェックする --> 利用者を認証状態にする
利用者を認証状態にする --> 利用者認証完了画面を表示する
利用者認証完了画面を表示する --> 利用者認証完了画面
アクティベートキーの一致をチェックする --> 利用者が既に認証されている旨のメッセージを表示する
利用者が既に認証されている旨のメッセージを表示する --> 利用者認証完了画面 :既に認証済みまたはアクティベートキーが一致しなかった場合

利用者を未認証状態で追加する -- 利用者アカウント
利用者を認証状態にする -- 利用者アカウント

@enduml
